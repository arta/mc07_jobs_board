################################################################################
# 1-10-17: #####################################################################
• gem 'devise' .. and followed insctruction including:
  $ rails g devise:install
  ..
  $ rails g devise:views
################################################################################



################################################################################
# 1-9-17: ######################################################################
################################################################################
• Querying of association:

    Job.joins( :category ).where( categories: { name: 'Name' } )

    : `:category` is an association name (a job belongs_to :category)
    : `categories:` is a table name

  : because:

    Category.where( name: 'Name' ) = Category.where( { name: 'Name' } )

    : A Model name is translated into a table name: "categories"."name" = 'Name'
################################################################################
• Job filter links helper. Would live in application_helper.

  # Not used but works; _job_filter_links partial is simpler.
  # Keep for reference; usage of content_tag and concat in _helpers.
  def job_filter_links
    content_tag :div, { id:'job_filter' } do
      concat link_to 'All', jobs_path
      concat ' | '
      Category.all.each do |category|
        concat ' | '
        concat link_to category.name, jobs_path( category: category.name )
      end
    end
  end
################################################################################
• Pass extra params via link_to (well, via _path helpers):

  =link_to 'Sweets', foods_path( flavor: 'sweet' ) ..

    <a href='market.com/foods?flavor=sweet', ..>Sweets</a>
################################################################################



################################################################################
# 1-8-17: ######################################################################
• Message from:
  $ rails g simple_form:install --bootstrap

    Be sure to have a copy of the Bootstrap stylesheet available on your
    application, you can get it on http://getbootstrap.com/.

    Inside your views, use the 'simple_form_for' with one of the Bootstrap form
    classes, '.form-horizontal' or '.form-inline', as the following:

    = simple_form_for(@user, html: { class: 'form-horizontal' }) do |form|
################################################################################
